
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Aug 11 19:02:14 CST 2014
//----------------------------------------------------

package Analizador;

import java.util.HashMap;
import java.util.LinkedList;
import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Mon Aug 11 19:02:14 CST 2014
  */
public class Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\103\000\002\002\004\000\002\003\005\000\002\003" +
    "\010\000\002\004\004\000\002\004\003\000\002\006\005" +
    "\000\002\006\007\000\002\006\007\000\002\006\007\000" +
    "\002\006\007\000\002\006\007\000\002\006\012\000\002" +
    "\006\003\000\002\022\005\000\002\022\005\000\002\022" +
    "\005\000\002\022\005\000\002\022\005\000\002\022\010" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\011\005\000\002\011\003\000\002" +
    "\012\005\000\002\012\003\000\002\013\005\000\002\013" +
    "\003\000\002\014\005\000\002\014\003\000\002\017\003" +
    "\000\002\017\005\000\002\021\003\000\002\021\003\000" +
    "\002\027\006\000\002\027\003\000\002\030\006\000\002" +
    "\030\003\000\002\032\005\000\002\032\005\000\002\032" +
    "\005\000\002\033\003\000\002\033\003\000\002\020\004" +
    "\000\002\020\004\000\002\020\004\000\002\020\003\000" +
    "\002\020\003\000\002\020\003\000\002\005\004\000\002" +
    "\005\003\000\002\007\010\000\002\007\013\000\002\007" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\006\000\002\023\005\000\002\024\004\000" +
    "\002\024\003\000\002\025\003\000\002\025\003\000\002" +
    "\025\010\000\002\026\010\000\002\026\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\204\000\004\046\004\001\002\000\004\042\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\006\026\012\027\013\001\002\000\012\002\ufff5\026" +
    "\ufff5\027\ufff5\045\ufff5\001\002\000\012\002\ufffd\026\ufffd" +
    "\027\ufffd\045\ufffd\001\002\000\012\004\167\005\173\006" +
    "\171\007\170\001\002\000\004\021\155\001\002\000\012" +
    "\002\000\026\012\027\013\045\016\001\002\000\012\002" +
    "\ufffe\026\ufffe\027\ufffe\045\ufffe\001\002\000\004\042\017" +
    "\001\002\000\012\031\021\034\024\041\020\044\023\001" +
    "\002\000\004\022\150\001\002\000\010\010\034\022\114" +
    "\027\032\001\002\000\014\002\uffce\031\uffce\034\uffce\041" +
    "\uffce\044\uffce\001\002\000\004\022\106\001\002\000\004" +
    "\027\030\001\002\000\014\002\uffff\031\021\034\024\041" +
    "\020\044\023\001\002\000\022\002\uffcb\027\uffcb\031\uffcb" +
    "\033\uffcb\034\uffcb\036\uffcb\041\uffcb\044\uffcb\001\002\000" +
    "\014\002\uffcf\031\uffcf\034\uffcf\041\uffcf\044\uffcf\001\002" +
    "\000\004\021\031\001\002\000\010\010\034\022\033\027" +
    "\032\001\002\000\056\002\uffdf\015\uffdf\016\uffdf\017\uffdf" +
    "\020\uffdf\021\uffdf\023\uffdf\024\uffdf\025\uffdf\026\uffdf\027" +
    "\uffdf\031\uffdf\032\uffdf\033\uffdf\034\uffdf\036\uffdf\041\uffdf" +
    "\044\uffdf\045\uffdf\047\uffdf\052\uffdf\053\uffdf\001\002\000" +
    "\010\010\034\022\033\027\032\001\002\000\056\002\uffe0" +
    "\015\uffe0\016\uffe0\017\uffe0\020\uffe0\021\uffe0\023\uffe0\024" +
    "\uffe0\025\uffe0\026\uffe0\027\uffe0\031\uffe0\032\uffe0\033\uffe0" +
    "\034\uffe0\036\uffe0\041\uffe0\044\uffe0\045\uffe0\047\uffe0\052" +
    "\uffe0\053\uffe0\001\002\000\006\015\052\047\051\001\002" +
    "\000\056\002\uffe3\015\uffe3\016\uffe3\017\uffe3\020\uffe3\021" +
    "\uffe3\023\uffe3\024\uffe3\025\uffe3\026\uffe3\027\uffe3\031\uffe3" +
    "\032\uffe3\033\uffe3\034\uffe3\036\uffe3\041\uffe3\044\uffe3\045" +
    "\uffe3\047\uffe3\052\uffe3\053\uffe3\001\002\000\056\002\uffe2" +
    "\015\uffe2\016\uffe2\017\uffe2\020\uffe2\021\uffe2\023\uffe2\024" +
    "\uffe2\025\uffe2\026\uffe2\027\uffe2\031\uffe2\032\uffe2\033\uffe2" +
    "\034\uffe2\036\uffe2\041\uffe2\044\uffe2\045\uffe2\047\uffe2\052" +
    "\uffe2\053\uffe2\001\002\000\056\002\uffe5\015\uffe5\016\uffe5" +
    "\017\uffe5\020\047\021\uffe5\023\uffe5\024\uffe5\025\uffe5\026" +
    "\uffe5\027\uffe5\031\uffe5\032\uffe5\033\uffe5\034\uffe5\036\uffe5" +
    "\041\uffe5\044\uffe5\045\uffe5\047\uffe5\052\uffe5\053\uffe5\001" +
    "\002\000\054\002\uffe7\015\uffe7\016\uffe7\017\045\021\uffe7" +
    "\023\uffe7\024\uffe7\025\uffe7\026\uffe7\027\uffe7\031\uffe7\032" +
    "\uffe7\033\uffe7\034\uffe7\036\uffe7\041\uffe7\044\uffe7\045\uffe7" +
    "\047\uffe7\052\uffe7\053\uffe7\001\002\000\052\002\uffe9\015" +
    "\uffe9\016\043\021\uffe9\023\uffe9\024\uffe9\025\uffe9\026\uffe9" +
    "\027\uffe9\031\uffe9\032\uffe9\033\uffe9\034\uffe9\036\uffe9\041" +
    "\uffe9\044\uffe9\045\uffe9\047\uffe9\052\uffe9\053\uffe9\001\002" +
    "\000\010\010\034\022\033\027\032\001\002\000\054\002" +
    "\uffe8\015\uffe8\016\uffe8\017\045\021\uffe8\023\uffe8\024\uffe8" +
    "\025\uffe8\026\uffe8\027\uffe8\031\uffe8\032\uffe8\033\uffe8\034" +
    "\uffe8\036\uffe8\041\uffe8\044\uffe8\045\uffe8\047\uffe8\052\uffe8" +
    "\053\uffe8\001\002\000\010\010\034\022\033\027\032\001" +
    "\002\000\056\002\uffe6\015\uffe6\016\uffe6\017\uffe6\020\047" +
    "\021\uffe6\023\uffe6\024\uffe6\025\uffe6\026\uffe6\027\uffe6\031" +
    "\uffe6\032\uffe6\033\uffe6\034\uffe6\036\uffe6\041\uffe6\044\uffe6" +
    "\045\uffe6\047\uffe6\052\uffe6\053\uffe6\001\002\000\010\010" +
    "\034\022\033\027\032\001\002\000\056\002\uffe4\015\uffe4" +
    "\016\uffe4\017\uffe4\020\uffe4\021\uffe4\023\uffe4\024\uffe4\025" +
    "\uffe4\026\uffe4\027\uffe4\031\uffe4\032\uffe4\033\uffe4\034\uffe4" +
    "\036\uffe4\041\uffe4\044\uffe4\045\uffe4\047\uffe4\052\uffe4\053" +
    "\uffe4\001\002\000\010\010\034\022\033\027\032\001\002" +
    "\000\010\010\034\022\033\027\032\001\002\000\052\002" +
    "\uffea\015\uffea\016\043\021\uffea\023\uffea\024\uffea\025\uffea" +
    "\026\uffea\027\uffea\031\uffea\032\uffea\033\uffea\034\uffea\036" +
    "\uffea\041\uffea\044\uffea\045\uffea\047\uffea\052\uffea\053\uffea" +
    "\001\002\000\020\015\052\027\013\031\021\034\024\036" +
    "\057\041\020\044\023\001\002\000\020\027\uffc4\031\uffc4" +
    "\033\uffc4\034\uffc4\036\uffc4\041\uffc4\044\uffc4\001\002\000" +
    "\020\027\uffc2\031\uffc2\033\uffc2\034\uffc2\036\uffc2\041\uffc2" +
    "\044\uffc2\001\002\000\004\022\065\001\002\000\020\027" +
    "\013\031\021\033\063\034\024\036\057\041\020\044\023" +
    "\001\002\000\020\027\uffc3\031\uffc3\033\uffc3\034\uffc3\036" +
    "\uffc3\041\uffc3\044\uffc3\001\002\000\020\027\uffc5\031\uffc5" +
    "\033\uffc5\034\uffc5\036\uffc5\041\uffc5\044\uffc5\001\002\000" +
    "\004\034\064\001\002\000\022\002\uffcc\027\uffcc\031\uffcc" +
    "\033\uffcc\034\uffcc\036\uffcc\041\uffcc\044\uffcc\001\002\000" +
    "\004\027\066\001\002\000\004\037\067\001\002\000\020" +
    "\010\034\011\070\014\071\022\033\027\032\035\072\040" +
    "\073\001\002\000\004\023\uffc9\001\002\000\004\023\uffc8" +
    "\001\002\000\004\022\101\001\002\000\004\022\077\001" +
    "\002\000\004\023\076\001\002\000\006\015\052\023\uffca" +
    "\001\002\000\020\027\uffc1\031\uffc1\033\uffc1\034\uffc1\036" +
    "\uffc1\041\uffc1\044\uffc1\001\002\000\004\023\100\001\002" +
    "\000\004\023\uffc6\001\002\000\010\010\034\022\033\027" +
    "\032\001\002\000\006\015\052\023\103\001\002\000\004" +
    "\023\uffc7\001\002\000\006\015\052\023\105\001\002\000" +
    "\056\002\uffe1\015\uffe1\016\uffe1\017\uffe1\020\uffe1\021\uffe1" +
    "\023\uffe1\024\uffe1\025\uffe1\026\uffe1\027\uffe1\031\uffe1\032" +
    "\uffe1\033\uffe1\034\uffe1\036\uffe1\041\uffe1\044\uffe1\045\uffe1" +
    "\047\uffe1\052\uffe1\053\uffe1\001\002\000\004\043\107\001" +
    "\002\000\004\037\110\001\002\000\004\027\111\001\002" +
    "\000\004\023\112\001\002\000\022\002\uffbf\027\uffbf\031" +
    "\uffbf\033\uffbf\034\uffbf\036\uffbf\041\uffbf\044\uffbf\001\002" +
    "\000\036\002\uffdb\023\uffdb\026\uffdb\027\uffdb\031\uffdb\032" +
    "\uffdb\033\uffdb\034\uffdb\036\uffdb\041\uffdb\044\uffdb\045\uffdb" +
    "\052\uffdb\053\uffdb\001\002\000\010\010\034\022\114\027" +
    "\032\001\002\000\012\015\052\021\132\024\134\025\133" +
    "\001\002\000\036\002\uffdd\023\uffdd\026\uffdd\027\uffdd\031" +
    "\uffdd\032\uffdd\033\uffdd\034\uffdd\036\uffdd\041\uffdd\044\uffdd" +
    "\045\uffdd\052\uffdd\053\127\001\002\000\006\032\121\052" +
    "\120\001\002\000\004\052\125\001\002\000\016\027\013" +
    "\031\021\034\024\036\057\041\020\044\023\001\002\000" +
    "\020\027\013\031\021\033\123\034\024\036\057\041\020" +
    "\044\023\001\002\000\004\031\124\001\002\000\022\002" +
    "\uffcd\027\uffcd\031\uffcd\033\uffcd\034\uffcd\036\uffcd\041\uffcd" +
    "\044\uffcd\001\002\000\010\010\034\022\114\027\032\001" +
    "\002\000\036\002\uffde\023\uffde\026\uffde\027\uffde\031\uffde" +
    "\032\uffde\033\uffde\034\uffde\036\uffde\041\uffde\044\uffde\045" +
    "\uffde\052\uffde\053\127\001\002\000\004\053\130\001\002" +
    "\000\010\010\034\022\114\027\032\001\002\000\036\002" +
    "\uffdc\023\uffdc\026\uffdc\027\uffdc\031\uffdc\032\uffdc\033\uffdc" +
    "\034\uffdc\036\uffdc\041\uffdc\044\uffdc\045\uffdc\052\uffdc\053" +
    "\uffdc\001\002\000\022\010\uffd2\012\uffd2\013\uffd2\021\uffd2" +
    "\022\uffd2\024\uffd2\025\uffd2\027\uffd2\001\002\000\022\010" +
    "\uffd0\012\uffd0\013\uffd0\021\uffd0\022\uffd0\024\uffd0\025\uffd0" +
    "\027\uffd0\001\002\000\022\010\uffd1\012\uffd1\013\uffd1\021" +
    "\uffd1\022\uffd1\024\uffd1\025\uffd1\027\uffd1\001\002\000\022" +
    "\010\034\012\136\013\137\021\143\022\033\024\142\025" +
    "\140\027\032\001\002\000\036\002\uffd7\023\uffd7\026\uffd7" +
    "\027\uffd7\031\uffd7\032\uffd7\033\uffd7\034\uffd7\036\uffd7\041" +
    "\uffd7\044\uffd7\045\uffd7\052\uffd7\053\uffd7\001\002\000\036" +
    "\002\uffd6\023\uffd6\026\uffd6\027\uffd6\031\uffd6\032\uffd6\033" +
    "\uffd6\034\uffd6\036\uffd6\041\uffd6\044\uffd6\045\uffd6\052\uffd6" +
    "\053\uffd6\001\002\000\022\010\uffd3\012\uffd3\013\uffd3\021" +
    "\uffd3\022\uffd3\024\uffd3\025\uffd3\027\uffd3\001\002\000\036" +
    "\002\uffd9\023\uffd9\026\uffd9\027\uffd9\031\uffd9\032\uffd9\033" +
    "\uffd9\034\uffd9\036\uffd9\041\uffd9\044\uffd9\045\uffd9\052\uffd9" +
    "\053\uffd9\001\002\000\022\010\uffd4\012\uffd4\013\uffd4\021" +
    "\uffd4\022\uffd4\024\uffd4\025\uffd4\027\uffd4\001\002\000\022" +
    "\010\uffd5\012\uffd5\013\uffd5\021\uffd5\022\uffd5\024\uffd5\025" +
    "\uffd5\027\uffd5\001\002\000\040\002\uffda\015\052\023\uffda" +
    "\026\uffda\027\uffda\031\uffda\032\uffda\033\uffda\034\uffda\036" +
    "\uffda\041\uffda\044\uffda\045\uffda\052\uffda\053\uffda\001\002" +
    "\000\014\015\052\021\132\023\105\024\134\025\133\001" +
    "\002\000\006\023\147\052\120\001\002\000\036\002\uffd8" +
    "\023\uffd8\026\uffd8\027\uffd8\031\uffd8\032\uffd8\033\uffd8\034" +
    "\uffd8\036\uffd8\041\uffd8\044\uffd8\045\uffd8\052\uffd8\053\uffd8" +
    "\001\002\000\004\043\151\001\002\000\004\037\152\001" +
    "\002\000\004\027\153\001\002\000\004\023\154\001\002" +
    "\000\022\002\uffc0\027\uffc0\031\uffc0\033\uffc0\034\uffc0\036" +
    "\uffc0\041\uffc0\044\uffc0\001\002\000\022\010\034\011\162" +
    "\012\136\013\137\014\161\022\114\027\032\035\163\001" +
    "\002\000\026\002\ufff0\026\ufff0\027\ufff0\031\ufff0\033\ufff0" +
    "\034\ufff0\036\ufff0\041\ufff0\044\ufff0\045\ufff0\001\002\000" +
    "\036\002\ufff4\015\052\021\132\024\134\025\133\026\ufff4" +
    "\027\ufff4\031\ufff4\033\ufff4\034\ufff4\036\ufff4\041\ufff4\044" +
    "\ufff4\045\ufff4\001\002\000\030\002\ufff1\026\ufff1\027\ufff1" +
    "\031\ufff1\033\ufff1\034\ufff1\036\ufff1\041\ufff1\044\ufff1\045" +
    "\ufff1\052\120\001\002\000\026\002\ufff2\026\ufff2\027\ufff2" +
    "\031\ufff2\033\ufff2\034\ufff2\036\ufff2\041\ufff2\044\ufff2\045" +
    "\ufff2\001\002\000\026\002\ufff3\026\ufff3\027\ufff3\031\ufff3" +
    "\033\ufff3\034\ufff3\036\ufff3\041\ufff3\044\ufff3\045\ufff3\001" +
    "\002\000\004\022\164\001\002\000\010\010\034\022\033" +
    "\027\032\001\002\000\006\015\052\023\166\001\002\000" +
    "\026\002\uffef\026\uffef\027\uffef\031\uffef\033\uffef\034\uffef" +
    "\036\uffef\041\uffef\044\uffef\045\uffef\001\002\000\004\027" +
    "\uffee\001\002\000\004\027\uffeb\001\002\000\004\027\uffec" +
    "\001\002\000\004\027\174\001\002\000\004\027\uffed\001" +
    "\002\000\014\002\ufffc\021\175\026\ufffc\027\ufffc\045\ufffc" +
    "\001\002\000\022\010\034\011\202\012\136\013\137\014" +
    "\201\022\114\027\032\035\203\001\002\000\012\002\ufff7" +
    "\026\ufff7\027\ufff7\045\ufff7\001\002\000\022\002\ufffb\015" +
    "\052\021\132\024\134\025\133\026\ufffb\027\ufffb\045\ufffb" +
    "\001\002\000\014\002\ufff8\026\ufff8\027\ufff8\045\ufff8\052" +
    "\120\001\002\000\012\002\ufff9\026\ufff9\027\ufff9\045\ufff9" +
    "\001\002\000\012\002\ufffa\026\ufffa\027\ufffa\045\ufffa\001" +
    "\002\000\004\022\204\001\002\000\010\010\034\022\033" +
    "\027\032\001\002\000\006\015\052\023\206\001\002\000" +
    "\012\002\ufff6\026\ufff6\027\ufff6\045\ufff6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\204\000\004\003\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\004\013\006\010" +
    "\022\007\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\171\001\001\000\002\001\001\000\006\006\014" +
    "\022\007\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\005\024\007\021\026\025\001\001\000\002\001\001" +
    "\000\024\011\114\012\041\013\040\014\037\017\035\021" +
    "\036\027\116\030\115\032\112\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\026\026" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\011\034\012\041\013\040\014\037\017" +
    "\035\021\036\001\001\000\002\001\001\000\016\011\103" +
    "\012\041\013\040\014\037\017\035\021\036\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\013\043\014\037\017\035\021\036\001\001" +
    "\000\002\001\001\000\010\014\045\017\035\021\036\001" +
    "\001\000\002\001\001\000\006\017\047\021\036\001\001" +
    "\000\002\001\001\000\016\011\053\012\041\013\040\014" +
    "\037\017\035\021\036\001\001\000\014\012\052\013\040" +
    "\014\037\017\035\021\036\001\001\000\002\001\001\000" +
    "\014\007\060\022\055\024\057\025\054\026\025\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\007\060\022\055\025\061\026\025\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\011\074" +
    "\012\041\013\040\014\037\017\035\021\036\023\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\011\101\012\041\013\040\014\037\017\035\021\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\011\144\012\041\013\040\014\037\017" +
    "\035\021\036\027\145\030\115\032\112\001\001\000\004" +
    "\020\134\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\007\060\022\055\024\121\025\054" +
    "\026\025\001\001\000\012\007\060\022\055\025\061\026" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\011\114\012\041\013\040\014\037\017\035\021\036\030" +
    "\125\032\112\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\011\114\012\041\013\040\014\037\017\035\021" +
    "\036\032\130\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\011\143\012" +
    "\041\013\040\014\037\017\035\021\036\033\140\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\020\134\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\011" +
    "\156\012\041\013\040\014\037\017\035\021\036\027\157" +
    "\030\115\032\112\033\155\001\001\000\002\001\001\000" +
    "\004\020\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\011\164\012" +
    "\041\013\040\014\037\017\035\021\036\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\011\176\012\041\013\040\014" +
    "\037\017\035\021\036\027\177\030\115\032\112\033\175" +
    "\001\001\000\002\001\001\000\004\020\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\011\204\012\041\013\040\014\037\017" +
    "\035\021\036\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}





        public LinkedList<Errores> ErroresSintacticos=new LinkedList<Errores>();
        
       
            /**Metodo al que se llama automaticamente ante algun error sintactico.*/
	public void syntax_error(Symbol s){
       ErroresSintacticos.add(new Errores(s.left+1,s.right,"Error sintactico Identificador " +s.value + " no reconocido." ));
	   System.out.println("Error Sintactico: "+s.value+" fila: "+(s.left+1)+" columna: "+s.right);
    }
             /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        ErroresSintacticos.add(new Errores(s.left+1,s.right,"G. Error sintactico  Identificador " +s.value + " no reconocido." ));
	   System.out.println("Error Sintactico: "+s.value+" fila: "+(s.left+1)+" columna: "+s.right);
    }
	
	
	//RAIZ DE LAS INSTRUCCIONES
	public Nodo Instrucciones;
	
	

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser$actions {


	
	
	

  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // PARCHIVOS ::= tanexar tparena tpath tcoma tid tparenc 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo nodo=new Nodo("anexar");nodo.hijos.add(new Nodo((String)p));
															Nodo n=new Nodo("variable");n.hijos.add(new Nodo((String)id));
															nodo.hijos.add(n);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(20/*PARCHIVOS*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // PARCHIVOS ::= tcrear tparena tpath tcoma tid tparenc 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo nodo=new Nodo("crear");nodo.hijos.add(new Nodo((String)p));
															Nodo n=new Nodo("variable");n.hijos.add(new Nodo((String)id));
															nodo.hijos.add(n);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(20/*PARCHIVOS*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // PCC ::= tconcat tparena tid tcoma PPCONCAT tparenc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int conleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int conright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object con = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo nodo=new Nodo("concatenar");nodo.hijos.add(new Nodo((String)id));
														nodo.hijos.add((Nodo)con);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(19/*PCC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // PCC ::= PASIGNA 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(19/*PCC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // PCC ::= PDC 
            {
              Object RESULT = null;
		int pdcleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int pdcright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object pdc = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=pdc;
              CUP$Parser$result = new java_cup.runtime.Symbol(19/*PCC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // PRCC ::= PCC 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("");nodo.hijos.add((Nodo)p);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*PRCC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // PRCC ::= PRCC PCC 
            {
              Object RESULT = null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = (Nodo)p1;nodo.hijos.add((Nodo)p2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*PRCC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // PPCONCAT ::= tsepara tparena tparenc 
            {
              Object RESULT = null;
		Nodo nodo=new Nodo("valor");nodo.hijos.add(new Nodo("separador"));RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*PPCONCAT*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // PPCONCAT ::= taletra tparena PCALCULADORA tparenc 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo val=new Nodo("valor");Nodo tip=new Nodo("aletra");
												tip.hijos.add((Nodo)e);val.hijos.add(tip);RESULT=val;
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*PPCONCAT*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // PPCONCAT ::= tcadena 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo v=new Nodo("valor");Nodo tip=new Nodo("cadena");
										tip.hijos.add(new Nodo((String)c));v.hijos.add(tip);RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*PPCONCAT*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // PPCONCAT ::= tletra 
            {
              Object RESULT = null;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object l = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo v=new Nodo("valor");Nodo tip=new Nodo("letra");
										tip.hijos.add(new Nodo((String)l));v.hijos.add(tip);RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*PPCONCAT*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // PPCONCAT ::= PCALCULADORA 
            {
              Object RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=pc;
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*PPCONCAT*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // PDC ::= PARCHIVOS 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=p;
              CUP$Parser$result = new java_cup.runtime.Symbol(5/*PDC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // PDC ::= tpara tid tigual PCALCULADORA thasta PCALCULADORA PRCC tfin tpara 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int instleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int instright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object inst = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		Nodo nodo=new Nodo("para"); nodo.hijos.add(new Nodo((String)id));
																					nodo.hijos.add((Nodo)v);nodo.hijos.add((Nodo)v2);
																					nodo.hijos.add((Nodo)inst);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(5/*PDC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // PDC ::= tmientras EXPL thacer PRCC tfin tmientras 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int instleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int instright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object inst = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		Nodo nodo=new Nodo("mientras");nodo.hijos.add((Nodo)e);
														nodo.hijos.add((Nodo)inst);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(5/*PDC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // PRDC ::= PDC 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("");nodo.hijos.add((Nodo)c);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(3/*PRDC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // PRDC ::= PRDC PDC 
            {
              Object RESULT = null;
		int c1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int c1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object c1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int c2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int c2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object c2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = (Nodo)c1;nodo.hijos.add((Nodo)c2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(3/*PRDC*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // PRELACIONAL ::= tmenor 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r;
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // PRELACIONAL ::= tmayor 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r;
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // PRELACIONAL ::= tigual 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r;
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // PRELACIONAL ::= PRELACIONAL tmenor 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int r2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int r2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r.toString()+r2.toString();
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // PRELACIONAL ::= PRELACIONAL tmayor 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int r2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int r2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r.toString()+r2.toString();
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // PRELACIONAL ::= PRELACIONAL tigual 
            {
              Object RESULT = null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int r2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int r2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object r2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=r.toString()+r2.toString();
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*PRELACIONAL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // PBOOL ::= tfalso 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("valor");Nodo tipo = new Nodo("bool");nodo.hijos.add((Nodo)tipo);
					tipo.hijos.add(new Nodo("false"));RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(25/*PBOOL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PBOOL ::= tverdadero 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("valor");Nodo tipo = new Nodo("bool");nodo.hijos.add((Nodo)tipo);
					tipo.hijos.add(new Nodo("true"));RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(25/*PBOOL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CMP ::= tparena EXPL tparenc 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(24/*CMP*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CMP ::= PCALCULADORA PRELACIONAL PBOOL 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=new Nodo((String)r);nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(24/*CMP*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CMP ::= PCALCULADORA PRELACIONAL PCALCULADORA 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=new Nodo((String)r);nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);
												System.out.println("PASO CAL COMP CALC");RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(24/*CMP*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // EXPL2 ::= CMP 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=e;
              CUP$Parser$result = new java_cup.runtime.Symbol(22/*EXPL2*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // EXPL2 ::= EXPL2 tand tand CMP 
            {
              Object RESULT = null;
		int val1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int val1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object val1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int val2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int val2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object val2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=new Nodo("&&");nodo.hijos.add((Nodo)val1);nodo.hijos.add((Nodo)val2);RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(22/*EXPL2*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EXPL ::= EXPL2 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=e;
              CUP$Parser$result = new java_cup.runtime.Symbol(21/*EXPL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // EXPL ::= EXPL tor tor EXPL2 
            {
              Object RESULT = null;
		int val1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int val1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object val1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int val2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int val2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object val2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=new Nodo("||");
										nodo.hijos.add((Nodo)val1);
										nodo.hijos.add((Nodo)val2);
										RESULT=nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(21/*EXPL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // PEID ::= tid 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("variable");nodo.hijos.add(new Nodo((String)id));RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(15/*PEID*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // PEID ::= tentero 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("valor");Nodo tipo = new Nodo("entero");nodo.hijos.add((Nodo)tipo);
					tipo.hijos.add(new Nodo((String)v));RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(15/*PEID*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // J ::= tparena PCALCULADORA tparenc 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(13/*J*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // J ::= PEID 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(13/*J*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // G ::= J 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(10/*G*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // G ::= G tdiv J 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("/");nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(10/*G*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // F ::= G 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(9/*F*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // F ::= F tmulti G 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("*");nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(9/*F*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // E ::= F 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(8/*E*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // E ::= E tmenos F 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("-");nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(8/*E*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // PCALCULADORA ::= E 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=(Nodo)v;Nodo nuevo=nodo.hijos.get(0);System.out.println(nuevo.valor);RESULT=v;
              CUP$Parser$result = new java_cup.runtime.Symbol(7/*PCALCULADORA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // PCALCULADORA ::= PCALCULADORA tmas E 
            {
              Object RESULT = null;
		int v1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object v1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("+");nodo.hijos.add((Nodo)v1);nodo.hijos.add((Nodo)v2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(7/*PCALCULADORA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // PTIPO ::= ttcadena 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=t;
              CUP$Parser$result = new java_cup.runtime.Symbol(6/*PTIPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // PTIPO ::= ttbool 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=t;
              CUP$Parser$result = new java_cup.runtime.Symbol(6/*PTIPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // PTIPO ::= ttletra 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=t;
              CUP$Parser$result = new java_cup.runtime.Symbol(6/*PTIPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // PTIPO ::= ttentero 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=t;
              CUP$Parser$result = new java_cup.runtime.Symbol(6/*PTIPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PASIGNA ::= tid tigual taletra tparena PCALCULADORA tparenc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													Nodo inst = new Nodo("asignacion");
													inst.hijos.add((Nodo)nodoId);Nodo val=new Nodo("valor");
													Nodo tip=new Nodo("aletra");tip.hijos.add((Nodo)e);val.hijos.add(tip);
													inst.hijos.add((Nodo)val);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PASIGNA ::= tid tigual PBOOL 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));Nodo inst = new Nodo("asignacion");
											inst.hijos.add((Nodo)nodoId);inst.hijos.add((Nodo)e);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // PASIGNA ::= tid tigual EXPL 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));Nodo inst = new Nodo("asignacion");
										inst.hijos.add((Nodo)nodoId);Nodo v=(Nodo)e;inst.hijos.add((Nodo)v);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PASIGNA ::= tid tigual tcadena 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));Nodo inst = new Nodo("asignacion");
										inst.hijos.add((Nodo)nodoId);Nodo v=new Nodo("valor");Nodo tip=new Nodo("cadena");
										tip.hijos.add(new Nodo((String)c));v.hijos.add(tip);inst.hijos.add((Nodo)v);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // PASIGNA ::= tid tigual tletra 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object l = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));Nodo inst = new Nodo("asignacion");
										inst.hijos.add((Nodo)nodoId);Nodo v=new Nodo("valor");Nodo tip=new Nodo("letra");
										tip.hijos.add(new Nodo((String)l));v.hijos.add(tip);inst.hijos.add((Nodo)v);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // PASIGNA ::= tid tigual PCALCULADORA 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));Nodo inst = new Nodo("asignacion");
											inst.hijos.add((Nodo)nodoId);inst.hijos.add((Nodo)v);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*PASIGNA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // PDV ::= PASIGNA 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // PDV ::= tvar PTIPO tid tigual taletra tparena PCALCULADORA tparenc 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-6)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);Nodo val=new Nodo("valor");
													Nodo tip=new Nodo("aletra");tip.hijos.add((Nodo)e);val.hijos.add(tip);
													inst.hijos.add((Nodo)val);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // PDV ::= tvar PTIPO tid tigual PBOOL 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);inst.hijos.add((Nodo)e);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // PDV ::= tvar PTIPO tid tigual EXPL 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);Nodo val=(Nodo)e;
													inst.hijos.add((Nodo)val);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // PDV ::= tvar PTIPO tid tigual tcadena 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);Nodo val=new Nodo("valor");
													Nodo tip=new Nodo("cadena");tip.hijos.add(new Nodo((String)c));val.hijos.add(tip);
													inst.hijos.add((Nodo)val);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // PDV ::= tvar PTIPO tid tigual tletra 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object l = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);Nodo val=new Nodo("valor");
													Nodo tip=new Nodo("letra");tip.hijos.add(new Nodo((String)l));val.hijos.add(tip);
													inst.hijos.add((Nodo)val);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // PDV ::= tvar PTIPO tid tigual PCALCULADORA 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("variable");nodoId.hijos.add(new Nodo((String)id));
													nodoId.hijos.add(new Nodo((String)t));Nodo inst = new Nodo("declaracionA");
													inst.hijos.add((Nodo)nodoId);inst.hijos.add((Nodo)v);RESULT = inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // PDV ::= tvar PTIPO tid 
            {
              Object RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodoId = new Nodo("declaracion");nodoId.hijos.add(new Nodo((String)id));nodoId.hijos.add(new Nodo((String)t));RESULT=nodoId;
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*PDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // PRDV ::= PDV 
            {
              Object RESULT = null;
		int instleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int instright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object inst = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo = new Nodo("");nodo.hijos.add((Nodo)inst);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(2/*PRDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // PRDV ::= PRDV PDV 
            {
              Object RESULT = null;
		int inst1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int inst1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object inst1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int inst2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int inst2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object inst2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo =(Nodo) inst1;nodo.hijos.add((Nodo)inst2);RESULT = nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(2/*PRDV*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= tdv tdpuntos PRDV tdc tdpuntos PRDC 
            {
              Object RESULT = null;
		int inst1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int inst1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object inst1 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int inst2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int inst2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object inst2 = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo nodo=(Nodo)inst1;nodo.hijos.add((Nodo)inst2);parser.Instrucciones=(Nodo)nodo;
              CUP$Parser$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tdv tdpuntos PRDV 
            {
              Object RESULT = null;
		int instleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int instright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object inst = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		Nodo n=(Nodo)inst;System.out.println("raiz "+n.valor);parser.Instrucciones = (Nodo)inst;
              CUP$Parser$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

